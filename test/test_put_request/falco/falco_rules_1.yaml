- condition: (evt.type=open or evt.type=openat) and evt.is_open_write=true and fd.typechar='f'
    and fd.num>=0
  macro: open_write
- condition: (evt.type=open or evt.type=openat) and evt.is_open_read=true and fd.typechar='f'
    and fd.num>=0
  macro: open_read
- condition: (evt.type=open or evt.type=openat) and evt.is_open_read=true and fd.typechar='d'
    and fd.num>=0
  macro: open_directory
- condition: (evt.num=0)
  macro: never_true
- condition: (evt.num>=0)
  macro: always_true
- condition: (proc.name!="<NA>")
  macro: proc_name_exists
- condition: evt.type in (rename, renameat)
  macro: rename
- condition: evt.type in (mkdir, mkdirat)
  macro: mkdir
- condition: evt.type in (rmdir, unlink, unlinkat)
  macro: remove
- condition: rename or remove
  macro: modify
- condition: evt.type = execve and evt.dir=<
  macro: spawned_process
- condition: evt.type in (symlink, symlinkat) and evt.dir=<
  macro: create_symlink
- condition: (evt.type in (chmod, fchmod, fchmodat) and evt.dir=<)
  macro: chmod
- condition: fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin)
  macro: bin_dir
- condition: "(evt.arg[1] startswith /bin/ or\n evt.arg[1] startswith /sbin/ or\n\
    \ evt.arg[1] startswith /usr/bin/ or\n evt.arg[1] startswith /usr/sbin/)\n"
  macro: bin_dir_mkdir
- condition: 'evt.arg[1] startswith /bin/ or evt.arg[1] startswith /sbin/ or evt.arg[1]
    startswith /usr/bin/ or evt.arg[1] startswith /usr/sbin/

    '
  macro: bin_dir_rename
- condition: fd.name startswith /etc/
  macro: etc_dir
- condition: ((fd.directory=/ or fd.name startswith /root) and fd.name contains "/")
  macro: root_dir
- items:
  - ash
  - bash
  - csh
  - ksh
  - sh
  - tcsh
  - zsh
  - dash
  list: shell_binaries
- items:
  - sshd
  - sftp-server
  - ssh-agent
  - ssh
  - scp
  - sftp
  - ssh-keygen
  - ssh-keysign
  - ssh-keyscan
  - ssh-add
  list: ssh_binaries
- items:
  - add-shell
  - remove-shell
  list: shell_mgmt_binaries
- condition: proc.name in (shell_binaries)
  macro: shell_procs
- items:
  - truncate
  - sha1sum
  - numfmt
  - fmt
  - fold
  - uniq
  - cut
  - who
  - groups
  - csplit
  - sort
  - expand
  - printf
  - printenv
  - unlink
  - tee
  - chcon
  - stat
  - basename
  - split
  - nice
  - 'yes'
  - whoami
  - sha224sum
  - hostid
  - users
  - stdbuf
  - base64
  - unexpand
  - cksum
  - od
  - paste
  - nproc
  - pathchk
  - sha256sum
  - wc
  - test
  - comm
  - arch
  - du
  - factor
  - sha512sum
  - md5sum
  - tr
  - runcon
  - env
  - dirname
  - tsort
  - join
  - shuf
  - install
  - logname
  - pinky
  - nohup
  - expr
  - pr
  - tty
  - timeout
  - tail
  - '['
  - seq
  - sha384sum
  - nl
  - head
  - id
  - mkfifo
  - sum
  - dircolors
  - ptx
  - shred
  - tac
  - link
  - chroot
  - vdir
  - chown
  - touch
  - ls
  - dd
  - uname
  - 'true'
  - pwd
  - date
  - chgrp
  - chmod
  - mktemp
  - cat
  - mknod
  - sync
  - ln
  - 'false'
  - rm
  - mv
  - cp
  - echo
  - readlink
  - sleep
  - stty
  - mkdir
  - df
  - dir
  - rmdir
  - touch
  list: coreutils_binaries
- items:
  - login
  - systemd
  - '"(systemd)"'
  - systemd-logind
  - su
  - nologin
  - faillog
  - lastlog
  - newgrp
  - sg
  list: login_binaries
- items:
  - shadowconfig
  - grpck
  - pwunconv
  - grpconv
  - pwck
  - groupmod
  - vipw
  - pwconv
  - useradd
  - newusers
  - cppw
  - chpasswd
  - usermod
  - groupadd
  - groupdel
  - grpunconv
  - chgpasswd
  - userdel
  - chage
  - chsh
  - gpasswd
  - chfn
  - expiry
  - passwd
  - vigr
  - cpgr
  - adduser
  - addgroup
  - deluser
  - delgroup
  list: passwd_binaries
- items:
  - chage
  - gpasswd
  - lastlog
  - newgrp
  - sg
  - adduser
  - deluser
  - chpasswd
  - groupadd
  - groupdel
  - addgroup
  - delgroup
  - groupmems
  - groupmod
  - grpck
  - grpconv
  - grpunconv
  - newusers
  - pwck
  - pwconv
  - pwunconv
  - useradd
  - userdel
  - usermod
  - vigr
  - vipw
  - unix_chkpwd
  list: shadowutils_binaries
- items:
  - setup-backend
  - dragent
  - sdchecks
  list: sysdigcloud_binaries
- items:
  - docker
  - dockerd
  - exe
  - docker-compose
  - docker-entrypoi
  - docker-runc-cur
  - docker-current
  - dockerd-current
  list: docker_binaries
- items:
  - hyperkube
  - skydns
  - kube2sky
  - exechealthz
  - weave-net
  - loopback
  - bridge
  - openshift-sdn
  - openshift
  list: k8s_binaries
- items:
  - lxd
  - lxcfs
  list: lxd_binaries
- items:
  - nginx
  - httpd
  - httpd-foregroun
  - lighttpd
  - apache
  - apache2
  list: http_server_binaries
- items:
  - mysqld
  - postgres
  - sqlplus
  list: db_server_binaries
- items:
  - mysql_install_d
  - mysql_ssl_rsa_s
  list: mysql_mgmt_binaries
- items:
  - pg_dumpall
  - pg_ctl
  - pg_lsclusters
  - pg_ctlcluster
  list: postgres_mgmt_binaries
- items:
  - mysql_mgmt_binaries
  - postgres_mgmt_binaries
  list: db_mgmt_binaries
- items:
  - couchdb
  - memcached
  - redis-server
  - rabbitmq-server
  - mongod
  list: nosql_server_binaries
- items:
  - gitlab-shell
  - gitlab-mon
  - gitlab-runner-b
  - git
  list: gitlab_binaries
- items:
  - lua
  - node
  - perl
  - perl5
  - perl6
  - php
  - python
  - python2
  - python3
  - ruby
  - tcl
  list: interpreted_binaries
- condition: '(proc.name in (interpreted_binaries))

    '
  macro: interpreted_procs
- condition: proc.name in (http_server_binaries, db_server_binaries, docker_binaries,
    sshd)
  macro: server_procs
- items:
  - dnf
  - rpm
  - rpmkey
  - yum
  - '"75-system-updat"'
  - rhsmcertd-worke
  - subscription-ma
  - repoquery
  - rpmkeys
  - rpmq
  - yum-cron
  - yum-config-mana
  - yum-debug-dump
  - abrt-action-sav
  - rpmdb_stat
  - microdnf
  - rhn_check
  - yumdb
  list: rpm_binaries
- items:
  - probe_rpminfo
  - probe_rpmverify
  - probe_rpmverifyfile
  - probe_rpmverifypackage
  list: openscap_rpm_binaries
- condition: (proc.name in (rpm_binaries, openscap_rpm_binaries) or proc.name in (salt-minion))
  macro: rpm_procs
- items:
  - dpkg
  - dpkg-preconfigu
  - dpkg-reconfigur
  - dpkg-divert
  - apt
  - apt-get
  - aptitude
  - frontend
  - preinst
  - add-apt-reposit
  - apt-auto-remova
  - apt-key
  - apt-listchanges
  - unattended-upgr
  - apt-add-reposit
  - apt-config
  - apt-cache
  list: deb_binaries
- items:
  - rpm_binaries
  - deb_binaries
  - update-alternat
  - gem
  - pip
  - pip3
  - sane-utils.post
  - alternatives
  - chef-client
  - apk
  list: package_mgmt_binaries
- condition: proc.name in (package_mgmt_binaries)
  macro: package_mgmt_procs
- condition: proc.pname in (package_mgmt_binaries) or proc.aname[2] in (package_mgmt_binaries)
    or proc.aname[3] in (package_mgmt_binaries) or proc.aname[4] in (package_mgmt_binaries)
  macro: package_mgmt_ancestor_procs
- condition: (proc.name=update-ssh-keys and fd.name startswith /home/core/.ssh)
  macro: coreos_write_ssh_dir
- condition: proc.aname in (package_mgmt_binaries, needrestart)
  macro: run_by_package_mgmt_binaries
- items:
  - ca-certificates
  list: ssl_mgmt_binaries
- items:
  - dhclient
  - dhclient-script
  - 11-dhclient
  list: dhcp_binaries
- items:
  - sudo
  - su
  - suexec
  - critical-stack
  - dzdo
  list: userexec_binaries
- items:
  - sshd
  - dbus-daemon-lau
  - ping
  - ping6
  - critical-stack-
  - pmmcli
  - filemng
  - PassengerAgent
  - bwrap
  - osdetect
  - nginxmng
  - sw-engine-fpm
  - start-stop-daem
  list: known_setuid_binaries
- items:
  - login_binaries
  - passwd_binaries
  - shadowutils_binaries
  list: user_mgmt_binaries
- items:
  - blkid
  - rename_device
  - update_engine
  - sgdisk
  list: dev_creation_binaries
- items:
  - aide
  - aide.wrapper
  - update-aide.con
  - logcheck
  - syslog-summary
  - osqueryd
  - ossec-syscheckd
  list: hids_binaries
- items:
  - openvpn
  list: vpn_binaries
- items:
  - nxexec
  - nxnode.bin
  - nxserver.bin
  - nxclient.bin
  list: nomachine_binaries
- condition: proc.name in (coreutils_binaries, user_mgmt_binaries)
  macro: system_procs
- items:
  - sendmail
  - sendmail-msp
  - postfix
  - procmail
  - exim4
  - pickup
  - showq
  - mailq
  - dovecot
  - imap-login
  - imap
  - mailmng-core
  - pop3-login
  - dovecot-lda
  - pop3
  list: mail_binaries
- items:
  - update_conf
  - parse_mc
  - makemap_hash
  - newaliases
  - update_mk
  - update_tlsm4
  - update_db
  - update_mc
  - ssmtp.postinst
  - mailq
  - postalias
  - postfix.config.
  - postfix.config
  - postfix-script
  - postconf
  list: mail_config_binaries
- items:
  - /etc/shadow
  - /etc/sudoers
  - /etc/pam.conf
  - /etc/security/pwquality.conf
  list: sensitive_file_names
- items:
  - /
  - /etc
  - /etc/
  - /root
  - /root/
  list: sensitive_directory_names
- condition: "fd.name startswith /etc and (fd.name in (sensitive_file_names)\n or\
    \ fd.directory in (/etc/sudoers.d, /etc/pam.d))\n"
  macro: sensitive_files
- condition: proc.duration <= 5000000000
  macro: proc_is_new
- condition: "(((evt.type in (accept,listen) and evt.dir=<) or\n  (evt.type in (recvfrom,recvmsg)\
    \ and evt.dir=< and\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true))\
    \ and\n (fd.typechar = 4 or fd.typechar = 6) and\n (fd.ip != \"0.0.0.0\" and fd.net\
    \ != \"127.0.0.0/8\") and\n (evt.rawres >= 0 or evt.res = EINPROGRESS))\n"
  macro: inbound
- items:
  - '"10.0.0.0/8"'
  - '"172.16.0.0/12"'
  - '"192.168.0.0/16"'
  list: rfc_1918_addresses
- condition: "(((evt.type = connect and evt.dir=<) or\n  (evt.type in (sendto,sendmsg)\
    \ and evt.dir=< and\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true))\
    \ and\n (fd.typechar = 4 or fd.typechar = 6) and\n (fd.ip != \"0.0.0.0\" and fd.net\
    \ != \"127.0.0.0/8\" and not fd.snet in (rfc_1918_addresses)) and\n (evt.rawres\
    \ >= 0 or evt.res = EINPROGRESS))\n"
  macro: outbound
- condition: "(((evt.type in (accept,listen,connect) and evt.dir=<)) or\n (fd.typechar\
    \ = 4 or fd.typechar = 6) and\n (fd.ip != \"0.0.0.0\" and fd.net != \"127.0.0.0/8\"\
    ) and\n (evt.rawres >= 0 or evt.res = EINPROGRESS))\n"
  macro: inbound_outbound
- condition: fd.sport=22
  macro: ssh_port
- condition: ssh_port
  macro: allowed_ssh_hosts
- condition: (never_true)
  macro: consider_all_outbound_conns
- items:
  - '"127.0.0.1"'
  - '"8.8.8.8"'
  list: allowed_outbound_destination_ipaddrs
- items:
  - '"127.0.0.1/8"'
  list: allowed_outbound_destination_networks
- items:
  - google.com
  - www.yahoo.com
  list: allowed_outbound_destination_domains
- condition: (never_true)
  macro: consider_all_inbound_conns
- items:
  - '"127.0.0.1"'
  list: allowed_inbound_source_ipaddrs
- items:
  - '"127.0.0.1/8"'
  - '"10.0.0.0/8"'
  list: allowed_inbound_source_networks
- items:
  - google.com
  list: allowed_inbound_source_domains
- items:
  - .bashrc
  - .bash_profile
  - .bash_history
  - .bash_login
  - .bash_logout
  - .inputrc
  - .profile
  list: bash_config_filenames
- items:
  - /etc/profile
  - /etc/bashrc
  list: bash_config_files
- items:
  - .cshrc
  - .login
  - .logout
  - .history
  - .tcshrc
  - .cshdirs
  list: csh_config_filenames
- items:
  - /etc/csh.cshrc
  - /etc/csh.login
  list: csh_config_files
- items:
  - .zshenv
  - .zprofile
  - .zshrc
  - .zlogin
  - .zlogout
  list: zsh_config_filenames
- items:
  - bash_config_filenames
  - csh_config_filenames
  - zsh_config_filenames
  list: shell_config_filenames
- items:
  - bash_config_files
  - csh_config_files
  list: shell_config_files
- items:
  - /etc/zsh
  list: shell_config_directories
- condition: (never_true)
  macro: consider_shell_config_reads
- condition: (never_true)
  macro: consider_all_cron_jobs
- condition: (container.id != host)
  macro: container
- condition: "((evt.type = container or\n (evt.type=execve and evt.dir=< and proc.vpid=1))\
    \ and\n container.image.repository != incomplete)\n"
  macro: container_started
- condition: '((proc.aname=sshd and proc.name != sshd) or proc.name=systemd-logind
    or proc.name=login)

    '
  macro: interactive
- items:
  - anacron
  - cron
  - crond
  - crontab
  list: cron_binaries
- items:
  - needrestart
  - 10-dpkg
  - 20-rpm
  - 30-pacman
  list: needrestart_binaries
- items:
  - 10_etc_sudoers.
  - 10_passwd_group
  list: sshkit_script_binaries
- items:
  - sw-engine
  - sw-engine-fpm
  - sw-engine-kv
  - filemng
  - f2bmng
  list: plesk_binaries
- condition: user.name in (bin, daemon, games, lp, mail, nobody, sshd, sync, uucp,
    www-data)
  macro: system_users
- condition: (proc.pname in (python, pypy, python3) and proc.pcmdline contains ansible)
  macro: parent_ansible_running_python
- condition: (proc.pname=python and proc.cmdline contains /usr/share/broctl)
  macro: parent_bro_running_python
- condition: "(proc.cmdline startswith \"denyhosts.py /usr/bin/denyhosts.py\" or\n\
    \ (proc.pname=python and\n (proc.pcmdline contains /usr/sbin/denyhosts or\n  proc.pcmdline\
    \ contains /usr/local/bin/denyhosts.py)))\n"
  macro: parent_python_running_denyhosts
- condition: '(proc.pname in (python, python2.7) and (proc.pcmdline contains /opt/draios/bin/sdchecks))

    '
  macro: parent_python_running_sdchecks
- condition: '(proc.name in (python, python2.7) and (proc.cmdline contains /opt/draios/bin/sdchecks))

    '
  macro: python_running_sdchecks
- condition: proc.pname startswith linux-image-
  macro: parent_linux_image_upgrade_script
- condition: (proc.pname=java and proc.cmdline startswith "sh -c echo")
  macro: parent_java_running_echo
- condition: "(proc.pname in (php,php5-fpm,php-fpm7.1,python,ruby,ruby2.3,ruby2.1,node,conda)\
    \ and (\n   proc.cmdline startswith \"sh -c git\" or\n   proc.cmdline startswith\
    \ \"sh -c date\" or\n   proc.cmdline startswith \"sh -c /usr/bin/g++\" or\n  \
    \ proc.cmdline startswith \"sh -c /usr/bin/gcc\" or\n   proc.cmdline startswith\
    \ \"sh -c gcc\" or\n   proc.cmdline startswith \"sh -c if type gcc\" or\n   proc.cmdline\
    \ startswith \"sh -c cd '/var/www/edi/';LC_ALL=en_US.UTF-8 git\" or\n   proc.cmdline\
    \ startswith \"sh -c /var/www/edi/bin/sftp.sh\" or\n   proc.cmdline startswith\
    \ \"sh -c /usr/src/app/crxlsx/bin/linux/crxlsx\" or\n   proc.cmdline startswith\
    \ \"sh -c make parent\" or\n   proc.cmdline startswith \"node /jenkins/tools\"\
    \ or\n   proc.cmdline startswith \"sh -c '/usr/bin/node'\" or\n   proc.cmdline\
    \ startswith \"sh -c stty -a |\" or\n   proc.pcmdline startswith \"node /opt/nodejs/bin/yarn\"\
    \ or\n   proc.pcmdline startswith \"node /usr/local/bin/yarn\" or\n   proc.pcmdline\
    \ startswith \"node /root/.config/yarn\" or\n   proc.pcmdline startswith \"node\
    \ /opt/yarn/bin/yarn.js\"))\n"
  macro: parent_scripting_running_builds
- condition: "(proc.pname=run-httpd and\n (proc.cmdline startswith \"sed -ri\" or\
    \ proc.cmdline startswith \"sed -i\") and\n (fd.name startswith /etc/httpd/conf.d/\
    \ or fd.name startswith /etc/httpd/conf))\n"
  macro: httpd_writing_ssl_conf
- condition: (proc.name=userhelper and fd.name startswith /etc/security)
  macro: userhelper_writing_etc_security
- condition: (proc.pname=Xvfb and proc.cmdline startswith 'sh -c "/usr/bin/xkbcomp"')
  macro: parent_Xvfb_running_xkbcomp
- condition: (proc.pname=nginx and proc.cmdline startswith "sh -c serf")
  macro: parent_nginx_running_serf
- condition: (proc.pcmdline startswith "node /usr/local/bin/npm" or proc.pcmdline
    startswith "node /usr/local/nodejs/bin/npm" or proc.pcmdline startswith "node
    /opt/rh/rh-nodejs6/root/usr/bin/npm")
  macro: parent_node_running_npm
- condition: (proc.pname=java and proc.pcmdline contains sbt-launch.jar)
  macro: parent_java_running_sbt
- items: []
  list: known_container_shell_spawn_cmdlines
- items: []
  list: known_shell_spawn_binaries
- condition: (proc.name in (python, pypy, python3) and proc.cmdline contains ansible)
  macro: ansible_running_python
- condition: (proc.name=python and (proc.cmdline contains yum-dump.py or proc.cmdline="python
    /usr/bin/chef-monitor.py"))
  macro: python_running_chef
- condition: "(proc.name=python and (proc.cmdline contains /usr/sbin/denyhosts or\n\
    \ proc.cmdline contains /usr/local/bin/denyhosts.py))\n"
  macro: python_running_denyhosts
- condition: "(proc.pname=qualys-cloud-ag or\n proc.aname[2]=qualys-cloud-ag or\n\
    \ proc.aname[3]=qualys-cloud-ag or\n proc.aname[4]=qualys-cloud-ag)\n"
  macro: run_by_qualys
- condition: "((proc.cmdline=\"usermod -a -G sumologic_collector\" or\n  proc.cmdline=\"\
    groupadd sumologic_collector\") and\n (proc.pname=secureFiles.sh and proc.aname[2]=java))\n"
  macro: run_by_sumologic_securefiles
- condition: ((proc.pname=sh and proc.aname[2]=yum) or (proc.aname[2]=sh and proc.aname[3]=yum))
  macro: run_by_yum
- condition: "(proc.aname[3] startswith omsagent- or\n proc.aname[3] startswith scx-)\n"
  macro: run_by_ms_oms
- condition: "(proc.aname[1] startswith google_accounts or\n proc.aname[2] startswith\
    \ google_accounts or\n proc.aname[3] startswith google_accounts)\n"
  macro: run_by_google_accounts_daemon
- condition: (proc.aname[2]=chef_command_wr or proc.aname[3]=chef_command_wr or proc.aname[2]=chef-client
    or proc.aname[3]=chef-client or proc.name=chef-client)
  macro: run_by_chef
- condition: (proc.aname[2]=adclient or proc.aname[3]=adclient or proc.aname[4]=adclient)
  macro: run_by_adclient
- condition: (proc.aname[2]=centrify or proc.aname[3]=centrify or proc.aname[4]=centrify)
  macro: run_by_centrify
- condition: (proc.aname[2]=puppet or proc.aname[3]=puppet)
  macro: run_by_puppet
- condition: "(user.name=foreman and\n (proc.pname in (rake, ruby, scl) and proc.aname[5]\
    \ in (tfm-rake,tfm-ruby)) or\n (proc.pname=scl and proc.aname[2] in (tfm-rake,tfm-ruby)))\n"
  macro: run_by_foreman
- condition: proc.name=java and proc.cmdline contains sdjagent.jar
  macro: java_running_sdjagent
- condition: (proc.pname=kubelet and proc.name=loopback)
  macro: kubelet_running_loopback
- condition: (proc.pcmdline startswith "python3 /marathon-lb/marathon_lb.py")
  macro: python_mesos_marathon_scripting
- condition: (proc.pname=splunkd and proc.cmdline startswith "sh -c /opt/splunkforwarder")
  macro: splunk_running_forwarder
- condition: (proc.name=multilog and proc.pname=supervise)
  macro: parent_supervise_running_multilog
- condition: (proc.name in (supervise,svc) and fd.name startswith "/etc/sb/")
  macro: supervise_writing_status
- condition: (proc.cmdline startswith "bash /usr/local/lib/pki/pki-realm" and fd.name
    startswith /etc/pki/realms)
  macro: pki_realm_writing_realms
- condition: (proc.name=htpasswd and fd.name=/etc/nginx/.htpasswd)
  macro: htpasswd_writing_passwd
- condition: "(proc.name in (dmeventd,lvcreate,pvscan) and\n (fd.name startswith /etc/lvm/archive\
    \ or\n  fd.name startswith /etc/lvm/backup or\n  fd.name startswith /etc/lvm/cache))\n"
  macro: lvprogs_writing_conf
- condition: (proc.name=ovsdb-server and fd.directory=/etc/openvswitch)
  macro: ovsdb_writing_openvswitch
- condition: (proc.cmdline startswith "perl /opt/psa/admin/bin/plesk_agent_manager"
    or proc.pcmdline startswith "perl /opt/psa/admin/bin/plesk_agent_manager")
  macro: perl_running_plesk
- condition: (proc.cmdline startswith "perl /usr/bin/updmap")
  macro: perl_running_updmap
- condition: (proc.cmdline startswith "perl /usr/share/centrifydc")
  macro: perl_running_centrifydc
- condition: (proc.name=runuser and fd.directory=/etc/pam.d)
  macro: runuser_reading_pam
- condition: (proc.pname=ucf and proc.aname[2]=frontend)
  macro: parent_ucf_writing_conf
- condition: "((proc.name=consul-template and fd.name startswith /etc/haproxy) or\n\
    \ (proc.name=reload.sh and proc.aname[2]=consul-template and fd.name startswith\
    \ /etc/ssl))\n"
  macro: consul_template_writing_conf
- condition: (proc.cmdline startswith "nodejs /opt/countly/bin" and fd.name startswith
    /etc/nginx)
  macro: countly_writing_nginx_conf
- items:
  - omi.postinst
  - omsconfig.posti
  - scx.postinst
  - omsadmin.sh
  - omiagent
  list: ms_oms_binaries
- condition: "((proc.name in (omiagent,omsagent,in_heartbeat_r*,omsadmin.sh,PerformInventor)\n\
    \   or proc.pname in (ms_oms_binaries)\n   or proc.aname[2] in (ms_oms_binaries))\n\
    \ and (fd.name startswith /etc/opt/omi or fd.name startswith /etc/opt/microsoft/omsagent))\n"
  macro: ms_oms_writing_conf
- condition: (proc.name in (GetLinuxOS.sh) and fd.name startswith /etc/opt/microsoft/scx)
  macro: ms_scx_writing_conf
- condition: (proc.pname startswith "bash /var/lib/waagent/" and fd.name startswith
    /etc/azure)
  macro: azure_scripts_writing_conf
- condition: (proc.name in (NetworkWatcherA) and fd.name=/etc/init.d/AzureNetworkWatcherAgent)
  macro: azure_networkwatcher_writing_conf
- condition: (proc.name=beam.smp and proc.cmdline contains couchdb and fd.name startswith
    /etc/couchdb)
  macro: couchdb_writing_conf
- condition: (proc.name=update-texmf and fd.name startswith /etc/texmf)
  macro: update_texmf_writing_conf
- condition: (proc.name=slapadd and fd.name startswith /etc/ldap)
  macro: slapadd_writing_conf
- condition: (proc.pname=run-openldap.sh and fd.name startswith /etc/openldap)
  macro: openldap_writing_conf
- condition: (proc.name=apiserver and container.image.repository=docker/ucp-agent
    and fd.name=/etc/authorization_config.cfg)
  macro: ucpagent_writing_conf
- condition: (proc.name=iscsiadm and fd.name startswith /etc/iscsi)
  macro: iscsi_writing_conf
- condition: (proc.name=pilot-agent and fd.name startswith /etc/istio)
  macro: istio_writing_conf
- condition: "((proc.name=symcfgd and fd.name startswith /etc/symantec) or\n (proc.name=navdefutil\
    \ and fd.name=/etc/symc-defutils.conf))\n"
  macro: symantec_writing_conf
- condition: (proc.cmdline startswith "java LiveUpdate" and fd.name in (/etc/liveupdate.conf,
    /etc/Product.Catalog.JavaLiveUpdate))
  macro: liveupdate_writing_conf
- condition: (proc.name=agent and container.image.repository contains "rancher/agent")
  macro: rancher_agent
- condition: (proc.name=rancher-bridge and container.image.repository contains "rancher/network-manager")
  macro: rancher_network_manager
- condition: "(proc.name=urlgrabber-ext- and proc.aname[3]=sosreport and\n (fd.name\
    \ startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\n"
  macro: sosreport_writing_files
- condition: "(proc.name=urlgrabber-ext- and proc.pname in (yum, yum-cron, repoquery)\
    \ and\n (fd.name startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\n"
  macro: pkgmgmt_progs_writing_pki
- condition: (proc.pname=update-ca-trust and proc.name=trust and fd.name startswith
    /etc/pki)
  macro: update_ca_trust_writing_pki
- condition: proc.name=brandbot and fd.name=/etc/os-release
  macro: brandbot_writing_os_release
- condition: (proc.name in (semodule,genhomedircon,sefcontext_comp) and fd.name startswith
    /etc/selinux)
  macro: selinux_writing_conf
- items:
  - vxconfigd
  - sfcache
  - vxclustadm
  - vxdctl
  - vxprint
  - vxdmpadm
  - vxdisk
  - vxdg
  - vxassist
  - vxtune
  list: veritas_binaries
- condition: (proc.cmdline startswith "perl /opt/VRTSsfmh/bin/mh_driver.pl")
  macro: veritas_driver_script
- condition: (proc.name in (veritas_binaries) or veritas_driver_script)
  macro: veritas_progs
- condition: (veritas_progs and (fd.name startswith /etc/vx or fd.name startswith
    /etc/opt/VRTS or fd.name startswith /etc/vom))
  macro: veritas_writing_config
- condition: (proc.name in (nginx,nginx-ingress-c,nginx-ingress) and (fd.name startswith
    /etc/nginx or fd.name startswith /etc/ingress-controller))
  macro: nginx_writing_conf
- condition: '(((proc.name=openssl and proc.pname=nginx-launch.sh) or proc.name=nginx-launch.sh)
    and fd.name startswith /etc/nginx/certs)

    '
  macro: nginx_writing_certs
- condition: (proc.pcmdline startswith "chef-client /opt/gitlab" and fd.name startswith
    /etc/gitlab)
  macro: chef_client_writing_conf
- condition: (proc.name in (adjoin,addns) and fd.name startswith /etc/krb5)
  macro: centrify_writing_krb
- condition: "((proc.pname=cockpit-kube-la or proc.aname[2]=cockpit-kube-la)\n and\
    \ fd.name startswith /etc/cockpit)\n"
  macro: cockpit_writing_conf
- condition: (proc.name=start-ipsec.sh and fd.directory=/etc/ipsec)
  macro: ipsec_writing_conf
- condition: (proc.cmdline startswith "exe /var/lib/docker" and proc.pname in (dockerd,
    docker))
  macro: exe_running_docker_save
- condition: (proc.name=sed and fd.name startswith "/etc/sed")
  macro: sed_temporary_file
- condition: (proc.cmdline startswith "python get-pip.py")
  macro: python_running_get_pip
- condition: (proc.cmdline startswith "python /var/lib/waagent/")
  macro: python_running_ms_oms
- condition: (proc.name=gugent and fd.name=GuestAgent.log)
  macro: gugent_writing_guestagent_log
- condition: (proc.name=dse-entrypoint and fd.name=/root/tmp__)
  macro: dse_writing_tmp
- condition: (proc.name=java and proc.cmdline contains "jar /zap" and fd.name startswith
    /root/.ZAP)
  macro: zap_writing_state
- condition: (proc.name=airflow and fd.name startswith /root/airflow)
  macro: airflow_writing_state
- condition: (proc.name=rpm and fd.directory=/root/.rpmdb)
  macro: rpm_writing_root_rpmdb
- condition: (proc.name=java and proc.cmdline contains "classpath /usr/local/apache-maven"
    and fd.name startswith /root/.groovy)
  macro: maven_writing_groovy
- condition: (proc.name=chef-client and fd.name startswith /root/.chef)
  macro: chef_writing_conf
- condition: (proc.name in (kubectl,oc) and fd.name startswith /root/.kube)
  macro: kubectl_writing_state
- condition: (proc.name=java and proc.cmdline contains "cassandra.jar")
  macro: java_running_cassandra
- condition: (java_running_cassandra and fd.directory=/root/.cassandra)
  macro: cassandra_writing_state
- condition: (proc.name=galley and fd.name in (known_istio_files))
  macro: galley_writing_state
- items:
  - /healthready
  - /healthliveness
  list: known_istio_files
- condition: (proc.name=kube-controller and fd.name startswith /status.json and k8s.pod.name
    startswith calico)
  macro: calico_writing_state
- condition: (proc.name=start_runit and fd.name startswith "/etc/envvars" and container.image.repository
    endswith "calico/node")
  macro: calico_writing_envvars
- items:
  - sources.list
  list: repository_files
- items:
  - /etc/apt/sources.list.d
  - /etc/yum.repos.d
  list: repository_directories
- condition: (fd.filename in (repository_files) or fd.directory in (repository_directories))
  macro: access_repositories
- condition: (evt.arg.newpath pmatch (repository_directories))
  macro: modify_repositories
- items:
  - /boot
  - /lib
  - /lib64
  - /usr/lib
  - /usr/local/lib
  - /usr/local/sbin
  - /usr/local/bin
  - /root/.ssh
  - /etc/cardserver
  list: monitored_directories
- condition: (fd.name startswith '/home' and fd.name contains '.ssh')
  macro: user_ssh_directory
- condition: (proc.name=google_accounts and user_ssh_directory)
  macro: google_accounts_daemon_writing_ssh
- condition: (proc.name=cloud-init and user_ssh_directory)
  macro: cloud_init_writing_ssh
- condition: (proc.pname in (mkinitramfs, update-initramf) and fd.directory=/boot)
  macro: mkinitramfs_writing_boot
- condition: "(fd.directory in (monitored_directories)\n or user_ssh_directory)\n\
    and not mkinitramfs_writing_boot\n"
  macro: monitored_dir
- condition: (never_true)
  macro: user_known_write_monitored_dir_conditions
- condition: (never_true)
  macro: consider_ssh_reads
- items:
  - /etc/cassandra
  - /etc/ssl/certs/java
  - /etc/logstash
  - /etc/nginx/conf.d
  - /etc/container_environment
  - /etc/hrmconfig
  - /etc/fluent/configs.d
  list: safe_etc_dirs
- condition: (proc.name=start-fluentd and fd.name in (/etc/fluent/fluent.conf, /etc/td-agent/td-agent.conf))
  macro: fluentd_writing_conf_files
- condition: (proc.name=qualys-cloud-ag and fd.name=/etc/qualys/cloud-agent/qagent-log.conf)
  macro: qualys_writing_conf_files
- condition: (proc.name=git-remote-http and fd.directory=/etc/pki/nssdb)
  macro: git_writing_nssdb
- condition: (proc.name in (plesk_binaries) and fd.name startswith /etc/sw/keys)
  macro: plesk_writing_keys
- condition: (proc.cmdline startswith "bash -hB /usr/lib/plesk-9.0/services/webserver.apache
    configure" and fd.name="/etc/apache2/apache2.conf.tmp")
  macro: plesk_install_writing_apache_conf
- condition: (proc.name=mktemp and proc.aname[3] in (plesk_binaries))
  macro: plesk_running_mktemp
- condition: proc.aname[2]=nm-dispatcher and fd.name=/etc/resolv.conf
  macro: networkmanager_writing_resolv_conf
- condition: (proc.name=add-shell and fd.name=/etc/shells.tmp)
  macro: add_shell_writing_shells_tmp
- condition: (proc.name=touch and proc.pcmdline startswith "bash /usr/bin/duply" and
    fd.name startswith "/etc/duply")
  macro: duply_writing_exclude_files
- condition: (proc.name=update-xmlcatal and fd.directory=/etc/xml)
  macro: xmlcatalog_writing_files
- condition: ((proc.cmdline startswith "python /opt/datadog-agent" or proc.cmdline
    startswith "entrypoint.sh /entrypoint.sh datadog start" or proc.cmdline startswith
    "agent.py /opt/datadog-agent") and fd.name startswith "/etc/dd-agent")
  macro: datadog_writing_conf
- condition: ((proc.name in (healthcheck, lb-controller, rancher-dns)) and (container.image.repository
    contains "rancher/healthcheck" or container.image.repository contains "rancher/lb-service-haproxy"
    or container.image.repository contains "rancher/dns") and (fd.name startswith
    "/etc/haproxy" or fd.name startswith "/etc/rancher-dns"))
  macro: rancher_writing_conf
- condition: (proc.name=rancher-metadat and (container.image.repository contains "rancher/metadata"
    or container.image.repository contains "rancher/lb-service-haproxy") and fd.name
    startswith "/answers.json")
  macro: rancher_writing_root
- condition: (proc.name=checkpoint and container.image.repository contains "coreos/pod-checkpointer"
    and fd.name startswith "/etc/kubernetes")
  macro: checkpoint_writing_state
- condition: "((proc.cmdline=\"run-java.sh /opt/jboss/container/java/run/run-java.sh\"\
    \n  or proc.cmdline=\"run-java.sh /opt/run-java/run-java.sh\")\n and container\n\
    \ and fd.name=/etc/passwd)\n"
  macro: jboss_in_container_writing_passwd
- condition: (proc.name=curl and fd.directory=/etc/pki/nssdb)
  macro: curl_writing_pki_db
- condition: ((proc.name in (update-haproxy-,haproxy_reload.) or proc.pname in (update-haproxy-,haproxy_reload,haproxy_reload.))
    and (fd.name=/etc/openvpn/client.map or fd.name startswith /etc/haproxy))
  macro: haproxy_writing_conf
- condition: (proc.name=java and fd.name=/etc/.java/.systemPrefs/.system.lock)
  macro: java_writing_conf
- condition: (proc.name=rabbitmq-server and fd.directory=/etc/rabbitmq)
  macro: rabbitmq_writing_conf
- condition: (proc.name=toolbox.sh and container.image.repository=rook/toolbox and
    fd.directory=/etc/ceph)
  macro: rook_writing_conf
- condition: (proc.name=httpd and fd.name startswith /etc/httpd/)
  macro: httpd_writing_conf_logs
- condition: "((proc.name in (start-mysql.sh, run-mysqld) or proc.pname=start-mysql.sh)\
    \ and\n (fd.name startswith /etc/mysql or fd.directory=/etc/my.cnf.d))\n"
  macro: mysql_writing_conf
- condition: '(proc.name in (run-redis, redis-launcher.) and fd.name=/etc/redis.conf
    or fd.name startswith /etc/redis)

    '
  macro: redis_writing_conf
- condition: (proc.name in (openvpn,openvpn-entrypo) and fd.name startswith /etc/openvpn)
  macro: openvpn_writing_conf
- condition: (proc.name=php_handlers_co and fd.name=/etc/psa/php_versions.json)
  macro: php_handlers_writing_conf
- condition: "((proc.aname[3]=cron_start.sh and fd.name startswith /etc/security/sed)\
    \ or\n (proc.name=sed and (fd.name startswith /etc/apt/sources.list.d/sed or\n\
    \                     fd.name startswith /etc/apt/sed or\n                   \
    \  fd.name startswith /etc/apt/apt.conf.d/sed)))\n"
  macro: sed_writing_temp_file
- condition: (proc.cmdline="bash /usr/sbin/start-cron" and fd.name=/etc/security/pam_env.conf)
  macro: cron_start_writing_pam_env
- condition: (proc.aname[2] in (dpkg-reconfigur, dpkg-preconfigu))
  macro: dpkg_scripting
- condition: (proc.name=ufw and fd.directory=/etc/ufw)
  macro: ufw_writing_conf
- condition: '(proc.name = calico-node and fd.name startswith /etc/calico)

    '
  macro: calico_writing_conf
- condition: (proc.name=prometheus-conf and fd.name startswith /etc/prometheus/config_out)
  macro: prometheus_conf_writing_conf
- condition: (proc.name=oc and fd.name startswith /etc/origin/node)
  macro: openshift_writing_conf
- condition: (proc.name=keepalived and fd.name=/etc/keepalived/keepalived.conf)
  macro: keepalived_writing_conf
- condition: (container and proc.name=etcd-manager and fd.name=/etc/hosts)
  macro: etcd_manager_updating_dns
- condition: proc.name=confd
  macro: user_known_write_etc_conditions
- condition: (never_true)
  macro: user_known_write_below_etc_activities
- condition: "etc_dir and evt.dir = < and open_write and proc_name_exists and not\
    \ proc.name in (passwd_binaries, shadowutils_binaries, sysdigcloud_binaries,\n\
    \                      package_mgmt_binaries, ssl_mgmt_binaries, dhcp_binaries,\n\
    \                      dev_creation_binaries, shell_mgmt_binaries,\n         \
    \             mail_config_binaries,\n                      sshkit_script_binaries,\n\
    \                      ldconfig.real, ldconfig, confd, gpg, insserv,\n       \
    \               apparmor_parser, update-mime, tzdata.config, tzdata.postinst,\n\
    \                      systemd, systemd-machine, systemd-sysuser,\n          \
    \            debconf-show, rollerd, bind9.postinst, sv,\n                    \
    \  gen_resolvconf., update-ca-certi, certbot, runsv,\n                      qualys-cloud-ag,\
    \ locales.postins, nomachine_binaries,\n                      adclient, certutil,\
    \ crlutil, pam-auth-update, parallels_insta,\n                      openshift-launc,\
    \ update-rc.d, puppet)\nand not proc.pname in (sysdigcloud_binaries, mail_config_binaries,\
    \ hddtemp.postins, sshkit_script_binaries, locales.postins, deb_binaries, dhcp_binaries)\
    \ and not fd.name pmatch (safe_etc_dirs) and not fd.name in (/etc/container_environment.sh,\
    \ /etc/container_environment.json, /etc/motd, /etc/motd.svc) and not sed_temporary_file\
    \ and not exe_running_docker_save and not ansible_running_python and not python_running_denyhosts\
    \ and not fluentd_writing_conf_files and not user_known_write_etc_conditions and\
    \ not run_by_centrify and not run_by_adclient and not qualys_writing_conf_files\
    \ and not git_writing_nssdb and not plesk_writing_keys and not plesk_install_writing_apache_conf\
    \ and not plesk_running_mktemp and not networkmanager_writing_resolv_conf and\
    \ not run_by_chef and not add_shell_writing_shells_tmp and not duply_writing_exclude_files\
    \ and not xmlcatalog_writing_files and not parent_supervise_running_multilog and\
    \ not supervise_writing_status and not pki_realm_writing_realms and not htpasswd_writing_passwd\
    \ and not lvprogs_writing_conf and not ovsdb_writing_openvswitch and not datadog_writing_conf\
    \ and not curl_writing_pki_db and not haproxy_writing_conf and not java_writing_conf\
    \ and not dpkg_scripting and not parent_ucf_writing_conf and not rabbitmq_writing_conf\
    \ and not rook_writing_conf and not php_handlers_writing_conf and not sed_writing_temp_file\
    \ and not cron_start_writing_pam_env and not httpd_writing_conf_logs and not mysql_writing_conf\
    \ and not openvpn_writing_conf and not consul_template_writing_conf and not countly_writing_nginx_conf\
    \ and not ms_oms_writing_conf and not ms_scx_writing_conf and not azure_scripts_writing_conf\
    \ and not azure_networkwatcher_writing_conf and not couchdb_writing_conf and not\
    \ update_texmf_writing_conf and not slapadd_writing_conf and not symantec_writing_conf\
    \ and not liveupdate_writing_conf and not sosreport_writing_files and not selinux_writing_conf\
    \ and not veritas_writing_config and not nginx_writing_conf and not nginx_writing_certs\
    \ and not chef_client_writing_conf and not centrify_writing_krb and not cockpit_writing_conf\
    \ and not ipsec_writing_conf and not httpd_writing_ssl_conf and not userhelper_writing_etc_security\
    \ and not pkgmgmt_progs_writing_pki and not update_ca_trust_writing_pki and not\
    \ brandbot_writing_os_release and not redis_writing_conf and not openldap_writing_conf\
    \ and not ucpagent_writing_conf and not iscsi_writing_conf and not istio_writing_conf\
    \ and not ufw_writing_conf and not calico_writing_conf and not calico_writing_envvars\
    \ and not prometheus_conf_writing_conf and not openshift_writing_conf and not\
    \ keepalived_writing_conf and not rancher_writing_conf and not checkpoint_writing_state\
    \ and not jboss_in_container_writing_passwd and not etcd_manager_updating_dns\
    \ and not user_known_write_below_etc_activities\n"
  macro: write_etc_common
- items:
  - /root/.monit.state
  - /root/.auth_tokens
  - /root/.bash_history
  - /root/.ash_history
  - /root/.aws/credentials
  - /root/.viminfo.tmp
  - /root/.lesshst
  - /root/.bzr.log
  - /root/.gitconfig.lock
  - /root/.babel.json
  - /root/.localstack
  - /root/.node_repl_history
  - /root/.mongorc.js
  - /root/.dbshell
  - /root/.augeas/history
  - /root/.rnd
  - /root/.wget-hsts
  - /health
  - /exec.fifo
  list: known_root_files
- items:
  - /root/.oracle_jre_usage
  - /root/.ssh
  - /root/.subversion
  - /root/.nami
  list: known_root_directories
- condition: (fd.name startswith /root/orcexec. or fd.name startswith /root/.m2 or
    fd.name startswith /root/.npm or fd.name startswith /root/.pki or fd.name startswith
    /root/.ivy2 or fd.name startswith /root/.config/Cypress or fd.name startswith
    /root/.config/pulse or fd.name startswith /root/.config/configstore or fd.name
    startswith /root/jenkins/workspace or fd.name startswith /root/.jenkins or fd.name
    startswith /root/.cache or fd.name startswith /root/.sbt or fd.name startswith
    /root/.java or fd.name startswith /root/.glide or fd.name startswith /root/.sonar
    or fd.name startswith /root/.v8flag or fd.name startswith /root/infaagent or fd.name
    startswith /root/.local/lib/python or fd.name startswith /root/.pm2 or fd.name
    startswith /root/.gnupg or fd.name startswith /root/.pgpass or fd.name startswith
    /root/.theano or fd.name startswith /root/.gradle or fd.name startswith /root/.android
    or fd.name startswith /root/.ansible or fd.name startswith /root/.crashlytics
    or fd.name startswith /root/.dbus or fd.name startswith /root/.composer or fd.name
    startswith /root/.gconf or fd.name startswith /root/.nv or fd.name startswith
    /root/.local/share/jupyter or fd.name startswith /root/oradiag_root or fd.name
    startswith /root/workspace or fd.name startswith /root/jvm or fd.name startswith
    /root/.node-gyp)
  macro: known_root_conditions
- condition: fd.name=/root/.bash_history
  macro: user_known_write_root_conditions
- condition: (never_true)
  macro: user_known_write_below_root_activities
- condition: proc.name in (cmp, cp) and proc.pname in (passwd, run-parts)
  macro: cmp_cp_by_passwd
- items:
  - iptables
  - ps
  - lsb_release
  - check-new-relea
  - dumpe2fs
  - accounts-daemon
  - sshd
  - vsftpd
  - systemd
  - mysql_install_d
  - psql
  - screen
  - debconf-show
  - sa-update
  - pam-auth-update
  - pam-config
  - /usr/sbin/spamd
  - polkit-agent-he
  - lsattr
  - file
  - sosreport
  - scxcimservera
  - adclient
  - rtvscand
  - cockpit-session
  - userhelper
  - ossec-syscheckd
  list: read_sensitive_file_binaries
- condition: cmp_cp_by_passwd
  macro: user_read_sensitive_file_conditions
- condition: "(proc.name = python and\n proc.pcmdline = \"python -m amazon_linux_extras\
    \ system_motd\" and\n proc.cmdline startswith \"python -c import yum;\")\n"
  macro: amazon_linux_running_python_yum
- condition: (proc.pname=postgres and proc.cmdline startswith "sh -c envdir /etc/wal-e.d/env
    /usr/local/bin/wal-e")
  macro: postgres_running_wal_e
- condition: (proc.aname[2]=redis-server and (proc.cmdline contains "redis-server.post-up.d"
    or proc.cmdline contains "redis-server.pre-up.d"))
  macro: redis_running_prepost_scripts
- condition: "(proc.pname=beam.smp and (proc.cmdline startswith \"sh -c exec ps\"\
    \ or\n proc.cmdline startswith \"sh -c exec inet_gethost\" or\n proc.cmdline=\
    \ \"sh -s unix:cmd\" or\n proc.cmdline= \"sh -c exec /bin/sh -s unix:cmd 2>&1\"\
    ))\n"
  macro: rabbitmq_running_scripts
- condition: (proc.aname[2]=rabbitmqctl and proc.cmdline startswith "sh -c ")
  macro: rabbitmqctl_running_scripts
- condition: (proc.pname=java and proc.pcmdline startswith "java -jar -Dappdynamics")
  macro: run_by_appdynamics
- items: []
  list: user_known_change_thread_namespace_binaries
- condition: (never_true)
  macro: user_known_change_thread_namespace_activities
- items:
  - aws-cni
  - azure-vnet
  list: network_plugin_binaries
- condition: (container.image.repository endswith calico/node and proc.name=calico-node)
  macro: calico_node
- condition: (container.image.repository endswith weaveworks/scope and proc.name=scope)
  macro: weaveworks_scope
- items:
  - http_server_binaries
  - db_server_binaries
  - nosql_server_binaries
  - mail_binaries
  - fluentd
  - flanneld
  - splunkd
  - consul
  - smbd
  - runsv
  - PM2
  list: protected_shell_spawning_binaries
- condition: (proc.pname=java and proc.pcmdline contains org.apache.zookeeper.server)
  macro: parent_java_running_zookeeper
- condition: (proc.pname=java and proc.pcmdline contains kafka.Kafka)
  macro: parent_java_running_kafka
- condition: (proc.pname=java and proc.pcmdline contains org.elasticsearch.bootstrap.Elasticsearch)
  macro: parent_java_running_elasticsearch
- condition: (proc.pname=java and proc.pcmdline contains activemq.jar)
  macro: parent_java_running_activemq
- condition: (proc.pname=java and (proc.pcmdline contains "-Dcassandra.config.loader"
    or proc.pcmdline contains org.apache.cassandra.service.CassandraDaemon))
  macro: parent_java_running_cassandra
- condition: (proc.pname=java and proc.pcmdline contains org.jboss)
  macro: parent_java_running_jboss_wildfly
- condition: (proc.pname=java and proc.pcmdline contains com.sun.enterprise.glassfish)
  macro: parent_java_running_glassfish
- condition: (proc.pname=java and proc.pcmdline contains org.apache.hadoop)
  macro: parent_java_running_hadoop
- condition: (proc.pname=java and proc.pcmdline contains com.datastax)
  macro: parent_java_running_datastax
- condition: (proc.pname=nginx and proc.cmdline contains "/usr/sbin/nginx -c /etc/nginx/nginx.conf")
  macro: nginx_starting_nginx
- condition: (proc.pname=nginx and proc.cmdline startswith "sh -c /usr/local/bin/aws
    s3 cp")
  macro: nginx_running_aws_s3_cp
- condition: (proc.pname=consul and (proc.cmdline startswith "sh -c curl" or proc.cmdline
    startswith "sh -c nc"))
  macro: consul_running_net_scripts
- condition: (proc.pname=consul and proc.cmdline startswith "sh -c /bin/consul-alerts")
  macro: consul_running_alert_checks
- condition: (proc.cmdline startswith "sh -c serf")
  macro: serf_script
- condition: (proc.cmdline startswith "sh -c kill -0 ")
  macro: check_process_status
- condition: (never_true and (proc.pname=node and proc.aname[3]=docker-containe))
  macro: possibly_node_in_container
- condition: (never_true and proc.pname=java and proc.pcmdline contains org.apache.catalina.startup.Bootstrap)
  macro: possibly_parent_java_running_tomcat
- condition: '(proc.aname in (protected_shell_spawning_binaries) or parent_java_running_zookeeper
    or parent_java_running_kafka or parent_java_running_elasticsearch or parent_java_running_activemq
    or parent_java_running_cassandra or parent_java_running_jboss_wildfly or parent_java_running_glassfish
    or parent_java_running_hadoop or parent_java_running_datastax or possibly_parent_java_running_tomcat
    or possibly_node_in_container)

    '
  macro: protected_shell_spawner
- items:
  - mesos-docker-ex
  - mesos-slave
  - mesos-health-ch
  list: mesos_shell_binaries
- condition: "(container.image.repository startswith openshift3/ or\n container.image.repository\
    \ startswith registry.redhat.io/openshift3/ or\n container.image.repository startswith\
    \ registry.access.redhat.com/openshift3/)\n"
  macro: allowed_openshift_registry_root
- condition: "(allowed_openshift_registry_root and\n  (container.image.repository\
    \ endswith /logging-deployment or\n   container.image.repository endswith /logging-elasticsearch\
    \ or\n   container.image.repository endswith /logging-kibana or\n   container.image.repository\
    \ endswith /logging-fluentd or\n   container.image.repository endswith /logging-auth-proxy\
    \ or\n   container.image.repository endswith /metrics-deployer or\n   container.image.repository\
    \ endswith /metrics-hawkular-metrics or\n   container.image.repository endswith\
    \ /metrics-cassandra or\n   container.image.repository endswith /metrics-heapster\
    \ or\n   container.image.repository endswith /ose-haproxy-router or\n   container.image.repository\
    \ endswith /ose-deployer or\n   container.image.repository endswith /ose-sti-builder\
    \ or\n   container.image.repository endswith /ose-docker-builder or\n   container.image.repository\
    \ endswith /ose-pod or\n   container.image.repository endswith /ose-node or\n\
    \   container.image.repository endswith /ose-docker-registry or\n   container.image.repository\
    \ endswith /prometheus-node-exporter or\n   container.image.repository endswith\
    \ /image-inspector))\n"
  macro: openshift_image
- items: []
  list: trusted_images
- condition: (container.image.repository in (trusted_images))
  macro: trusted_containers
- condition: (container.image.repository endswith sysdig/agent)
  macro: user_trusted_containers
- items:
  - docker.io/sematext/sematext-agent-docker
  - docker.io/sematext/agent
  - docker.io/sematext/logagent
  - registry.access.redhat.com/sematext/sematext-agent-docker
  - registry.access.redhat.com/sematext/agent
  - registry.access.redhat.com/sematext/logagent
  list: sematext_images
- items:
  - docker.io/sysdig/agent
  - docker.io/sysdig/falco
  - docker.io/sysdig/sysdig
  - gcr.io/google_containers/kube-proxy
  - docker.io/calico/node
  - quay.io/calico/node
  - docker.io/rook/toolbox
  - docker.io/cloudnativelabs/kube-router
  - docker.io/mesosphere/mesos-slave
  - docker.io/docker/ucp-agent
  - sematext_images
  - k8s.gcr.io/kube-proxy
  list: falco_privileged_images
- condition: (openshift_image or user_trusted_containers or container.image.repository
    in (trusted_images) or container.image.repository in (falco_privileged_images)
    or container.image.repository startswith istio/proxy_ or container.image.repository
    startswith quay.io/sysdig)
  macro: falco_privileged_containers
- condition: (container.image.repository endswith sysdig/agent)
  macro: user_privileged_containers
- items:
  - rancher/network-manager
  - rancher/dns
  - rancher/agent
  - rancher/lb-service-haproxy
  - rancher/metadata
  - rancher/healthcheck
  list: rancher_images
- items:
  - docker.io/sysdig/agent
  - docker.io/sysdig/falco
  - docker.io/sysdig/sysdig
  - gcr.io/google_containers/hyperkube
  - gcr.io/google_containers/kube-proxy
  - docker.io/calico/node
  - docker.io/rook/toolbox
  - docker.io/cloudnativelabs/kube-router
  - docker.io/consul
  - docker.io/datadog/docker-dd-agent
  - docker.io/datadog/agent
  - docker.io/docker/ucp-agent
  - docker.io/gliderlabs/logspout
  - docker.io/netdata/netdata
  - docker.io/google/cadvisor
  - docker.io/prom/node-exporter
  - amazon/amazon-ecs-agent
  list: falco_sensitive_mount_images
- condition: (user_trusted_containers or container.image.repository in (trusted_images)
    or container.image.repository in (falco_sensitive_mount_images) or container.image.repository
    startswith quay.io/sysdig)
  macro: falco_sensitive_mount_containers
- items: []
  list: falco_hostnetwork_images
- condition: (container.image.repository = docker.io/sysdig/agent)
  macro: user_sensitive_mount_containers
- condition: (container.mount.dest[/proc*] != "N/A" or container.mount.dest[/var/run/docker.sock]
    != "N/A" or container.mount.dest[/var/lib/kubelet] != "N/A" or container.mount.dest[/var/lib/kubelet/pki]
    != "N/A" or container.mount.dest[/] != "N/A" or container.mount.dest[/etc] !=
    "N/A" or container.mount.dest[/root*] != "N/A")
  macro: sensitive_mount
- condition: (not proc.pname exists or proc.pname in (runc:[0:PARENT], runc:[1:CHILD],
    runc, docker-runc, exe))
  macro: container_entrypoint
- condition: (container.id exists)
  macro: allowed_containers
- items:
  - '"sh -c uname -p 2> /dev/null"'
  - '"sh -c uname -s 2>&1"'
  - '"sh -c uname -r 2>&1"'
  - '"sh -c uname -v 2>&1"'
  - '"sh -c uname -a 2>&1"'
  - '"sh -c ruby -v 2>&1"'
  - '"sh -c getconf CLK_TCK"'
  - '"sh -c getconf PAGESIZE"'
  - '"sh -c LC_ALL=C LANG=C /sbin/ldconfig -p 2>/dev/null"'
  - '"sh -c LANG=C /sbin/ldconfig -p 2>/dev/null"'
  - '"sh -c /sbin/ldconfig -p 2>/dev/null"'
  - '"sh -c stty -a 2>/dev/null"'
  - '"sh -c stty -a < /dev/tty"'
  - '"sh -c stty -g < /dev/tty"'
  - '"sh -c node index.js"'
  - '"sh -c node index"'
  - '"sh -c node ./src/start.js"'
  - '"sh -c node app.js"'
  - '"sh -c node -e \"require(''nan'')\""'
  - '"sh -c node -e \"require(''nan'')\")"'
  - '"sh -c node $NODE_DEBUG_OPTION index.js "'
  - '"sh -c crontab -l 2"'
  - '"sh -c lsb_release -a"'
  - '"sh -c lsb_release -is 2>/dev/null"'
  - '"sh -c whoami"'
  - '"sh -c node_modules/.bin/bower-installer"'
  - '"sh -c /bin/hostname -f 2> /dev/null"'
  - '"sh -c locale -a"'
  - '"sh -c  -t -i"'
  - '"sh -c openssl version"'
  - '"bash -c id -Gn kafadmin"'
  - '"sh -c /bin/sh -c ''date +%%s''"'
  list: known_shell_spawn_cmdlines
- items: []
  list: user_known_shell_spawn_binaries
- condition: (never_true)
  macro: user_shell_container_exclusions
- condition: (proc.name=login and fd.l4proto=udp and fd.sport=53)
  macro: login_doing_dns_lookup
- condition: (always_true)
  macro: allowed_ssh_proxy_env
- items:
  - curl
  - wget
  list: http_proxy_binaries
- condition: (proc.name in (http_proxy_binaries))
  macro: http_proxy_procs
- condition: (never_true)
  macro: consider_interpreted_inbound
- condition: (never_true)
  macro: consider_interpreted_outbound
- items:
  - 1194
  - 1197
  - 1198
  - 8080
  - 9201
  list: openvpn_udp_ports
- items:
  - 500
  - 1701
  - 4500
  - 10000
  list: l2tp_udp_ports
- items:
  - 8125
  list: statsd_ports
- items:
  - 123
  list: ntp_ports
- items:
  - 0
  - 9
  - 80
  - 3306
  list: test_connect_ports
- condition: (never_true)
  macro: do_unexpected_udp_check
- items:
  - 53
  - openvpn_udp_ports
  - l2tp_udp_ports
  - statsd_ports
  - ntp_ports
  - test_connect_ports
  list: expected_udp_ports
- condition: fd.port in (expected_udp_ports)
  macro: expected_udp_traffic
- condition: ((user.name=nobody and evt.arg.uid=nobody) or (user.name=www-data and
    evt.arg.uid=www-data) or (user.name=_apt and evt.arg.uid=_apt) or (user.name=postfix
    and evt.arg.uid=postfix) or (user.name=pki-agent and evt.arg.uid=pki-agent) or
    (user.name=pki-acme and evt.arg.uid=pki-acme) or (user.name=nfsnobody and evt.arg.uid=nfsnobody)
    or (user.name=postgres and evt.arg.uid=postgres))
  macro: somebody_becoming_themself
- condition: (proc.name=nrpe and evt.arg.uid=nagios)
  macro: nrpe_becoming_nagios
- condition: (container and user.name != "N/A")
  macro: known_user_in_container
- condition: user.name=root
  macro: user_known_non_sudo_setuid_conditions
- items:
  - /dev/null
  - /dev/stdin
  - /dev/stdout
  - /dev/stderr
  - /dev/random
  - /dev/urandom
  - /dev/console
  - /dev/kmsg
  list: allowed_dev_files
- condition: container
  macro: ec2_metadata_containers
- condition: (fd.sip="1.2.3.4" and fd.sport=8080)
  macro: k8s_api_server
- condition: "(container.image.repository in (gcr.io/google_containers/hyperkube-amd64,\n\
    \ gcr.io/google_containers/kube2sky, sysdig/agent, sysdig/falco,\n sysdig/sysdig))\n"
  macro: k8s_containers
- condition: container
  macro: nodeport_containers
- items:
  - nc
  - ncat
  - nmap
  - dig
  - tcpdump
  - tshark
  - ngrep
  list: network_tool_binaries
- condition: (proc.name in (network_tool_binaries))
  macro: network_tool_procs
- condition: (never_true)
  macro: consider_network_tools_on_host
- items:
  - grep
  - egrep
  - fgrep
  list: grep_binaries
- condition: (proc.name in (grep_binaries))
  macro: grep_commands
- condition: (never_true)
  macro: grep_more
- condition: "(proc.args icontains \"BEGIN PRIVATE\" or\n proc.args icontains \"BEGIN\
    \ RSA PRIVATE\" or\n proc.args icontains \"BEGIN DSA PRIVATE\" or\n proc.args\
    \ icontains \"BEGIN EC PRIVATE\" or\n (grep_more and\n  (proc.args icontains \"\
    \ pass \" or\n   proc.args icontains \" ssh \" or\n   proc.args icontains \" user\
    \ \"))\n)\n"
  macro: private_key_or_password
- items:
  - /var/log
  - /dev/log
  list: log_directories
- items:
  - syslog
  - auth.log
  - secure
  - kern.log
  - cron
  - user.log
  - dpkg.log
  - last.log
  - yum.log
  - access_log
  - mysql.log
  - mysqld.log
  list: log_files
- condition: (fd.directory in (log_directories) or fd.filename in (log_files))
  macro: access_log_files
- condition: (never_true)
  macro: allowed_clear_log_files
- condition: (container.image.repository endswith "splunk/fluentd-hec" or container.image.repository
    endswith "fluent/fluentd-kubernetes-daemonset")
  macro: trusted_logging_images
- items:
  - shred
  - mkfs
  - mke2fs
  list: data_remove_commands
- condition: (proc.name in (data_remove_commands))
  macro: clear_data_procs
- condition: (always_true)
  macro: consider_all_chmods
- items: []
  list: user_known_chmod_applications
- items:
  - /root/.cassandra
  list: exclude_hidden_directories
- condition: (never_true)
  macro: consider_hidden_file_creation
- items:
  - rsync
  - scp
  - sftp
  - dcp
  list: remote_file_copy_binaries
- condition: (proc.name in (remote_File_copy_binaries))
  macro: remote_file_copy_procs
- items:
  - 25
  - 3333
  - 3334
  - 3335
  - 3336
  - 3357
  - 4444
  - 5555
  - 5556
  - 5588
  - 5730
  - 6099
  - 6666
  - 7777
  - 7778
  - 8000
  - 8001
  - 8008
  - 8080
  - 8118
  - 8333
  - 8888
  - 8899
  - 9332
  - 9999
  - 14433
  - 14444
  - 45560
  - 45700
  list: miner_ports
- items:
  - asia1.ethpool.org
  - ca.minexmr.com
  - cn.stratum.slushpool.com
  - de.minexmr.com
  - eth-ar.dwarfpool.com
  - eth-asia.dwarfpool.com
  - eth-asia1.nanopool.org
  - eth-au.dwarfpool.com
  - eth-au1.nanopool.org
  - eth-br.dwarfpool.com
  - eth-cn.dwarfpool.com
  - eth-cn2.dwarfpool.com
  - eth-eu.dwarfpool.com
  - eth-eu1.nanopool.org
  - eth-eu2.nanopool.org
  - eth-hk.dwarfpool.com
  - eth-jp1.nanopool.org
  - eth-ru.dwarfpool.com
  - eth-ru2.dwarfpool.com
  - eth-sg.dwarfpool.com
  - eth-us-east1.nanopool.org
  - eth-us-west1.nanopool.org
  - eth-us.dwarfpool.com
  - eth-us2.dwarfpool.com
  - eu.stratum.slushpool.com
  - eu1.ethermine.org
  - eu1.ethpool.org
  - fr.minexmr.com
  - mine.moneropool.com
  - mine.xmrpool.net
  - pool.minexmr.com
  - pool.monero.hashvault.pro
  - pool.supportxmr.com
  - sg.minexmr.com
  - sg.stratum.slushpool.com
  - stratum-eth.antpool.com
  - stratum-ltc.antpool.com
  - stratum-zec.antpool.com
  - stratum.antpool.com
  - us-east.stratum.slushpool.com
  - us1.ethermine.org
  - us1.ethpool.org
  - us2.ethermine.org
  - us2.ethpool.org
  - xmr-asia1.nanopool.org
  - xmr-au1.nanopool.org
  - xmr-eu1.nanopool.org
  - xmr-eu2.nanopool.org
  - xmr-jp1.nanopool.org
  - xmr-us-east1.nanopool.org
  - xmr-us-west1.nanopool.org
  - xmr.crypto-pool.fr
  - xmr.pool.minergate.com
  list: miner_domains
- items:
  - ca.minexmr.com
  - cn.stratum.slushpool.com
  - de.minexmr.com
  - fr.minexmr.com
  - mine.moneropool.com
  - mine.xmrpool.net
  - pool.minexmr.com
  - sg.minexmr.com
  - stratum-eth.antpool.com
  - stratum-ltc.antpool.com
  - stratum-zec.antpool.com
  - stratum.antpool.com
  - xmr.crypto-pool.fr
  list: https_miner_domains
- items:
  - ca.minexmr.com
  - de.minexmr.com
  - fr.minexmr.com
  - mine.moneropool.com
  - mine.xmrpool.net
  - pool.minexmr.com
  - sg.minexmr.com
  - xmr.crypto-pool.fr
  list: http_miner_domains
- condition: (fd.sport="443" and fd.sip.name in (https_miner_domains))
  macro: minerpool_https
- condition: (fd.sport="80" and fd.sip.name in (http_miner_domains))
  macro: minerpool_http
- condition: (fd.sport in (miner_ports) and fd.sip.name in (miner_domains))
  macro: minerpool_other
- condition: (evt.type in (sendto, sendmsg) and evt.dir=< and ((minerpool_http) or
    (minerpool_https) or (minerpool_other)))
  macro: net_miner_pool
- condition: never_true
  macro: syslog
- condition: never_true
  macro: ssh_error_message
- rule: 新规则1
  tags:
  - 修改1
  - 修改2
  - 新规则1
- rule: 新规则2
  tags:
  - 修改全部,新规则2
- rule: 新规则3
  tags: []
